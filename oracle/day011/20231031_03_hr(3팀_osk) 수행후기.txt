
▶ 제목: HR 샘플스키마 ERD 를 이용한 테이블 재구성

-----------------------------------------------------------------------------------------

1. 과제
1.1. 소개
- 기간: 2023.10.31 ~ 2023.11.01
- 조건: 팀별로... HR 샘플스키마에 있는 기본 테이블(7개)
    -- COUNTRIES / DEPARTMENTS / EMPLOYEES / JOBS / JOB_HISTORY / LOCATIONS / REGIONS
    -- 을 똑~~~~~~~~같이 새로 구성한다.
1.2. 팀원
- 팀장: 채다선
- 팀원: 김경태, 김수환, 박가영, 박범구, 오수경

-----------------------------------------------------------------------------------------

2. 나의 포지션: 
    - REGIONS 테이블: 생성, 제약조건, insert 구문
    - EMPLOYEES 테이블: 제약조건
    - 전반적인 테이블의 insert 구문 작성

-----------------------------------------------------------------------------------------

3. 맞이한 문제점 & 해결방안
3.1. 문제1) 외래키 참조에 따른, 테이블 생성 및 데이터 입력의 어려움
3.1.1. 상세내용
    모든 테이블이 서로 외래키를 가지고 있었기 때문에 그에 따라서 외래키를 만들기 위해서는 부모에 해당하는
    테이블을 생성해 주어야 자식 테이블의 제약조건을 설정해 줄수 있었다.
    예를 들어, [DEPARTMENTS3 테이블]의 경우, LOCATION_ID 가
    각각 [LOCATIONS3 테이블] 의 LOCATION_ID 을 참조해야 했기 때문에 [LOCATIONS3 테이블] 의 생성 이후에 만들어져야 했다.

3.1.2. 해결방안
    위 문제를 극복하기 위해 (1) 기존 데이터의 참조를 분석하였다.

    (★: P.K / 일반텍스트: F.K)
    ==============================================================================================================
    EMPLOYEES3	        COUNTRIES	DEPARTMENTS	    JOBS	JOB_HISTORY	LOCATIONS	REGIONS
    --------------      -------------   -------------       ----------  --------------  --------------  ----------   
    ★EMPLOY_ID         			                        EMPLOY_ID		
    JOB_ID  			                            ★JOB_ID   	JOB_ID		
    DEPARTMENT_ID      		        ★DEPARTMENT_ID      	        DEPARTMENT_ID  		
                                        LOCATION_ID          			       	★LOCATION_ID  	
                        ★COUNTRY_ID  				                         COUNTRY_ID 	
    MANAGER_ID       		        MANAGER_ID      				
                        REGION_ID  					                                ★REGION_ID  
    ==============================================================================================================

    위의 외래키를 설정하기 위해 부모테이블이 만들어져야 하는 순서를 작성하여 규칙에 따라 테이블을 생성하였다.

    테이블 생성 순서: 
    (1) JOBS3
    (2) REGIONS3
    (3) COUNTRIES3
    (4) LOCATIONS3
    (5) DEPARTMENTS3
    (6) EMPLOYEES
    (7) JOB_HISTORY3

3.2. 문제2) 제약조건 생성 방법(컬럼 레벨형식, 테이블 레벨 형식)에 따른 NOT NULL
3.2.1. 상세내용
    NOT NULL의 제약조건을 만들 경우 (1)컬럼 레벨 형식 과 (2) 테이블 레벨의 형식 이 있는데
    (2)테이블 레벨 형식 인 '컬럼명 데이터 타입, CONSTRAINT CONSTRAINT명 CHECK(컬럼명 IS NOT NULL)'으로 작성할 경우
    'DESC 테이블명' 으로 조회 할 경우 '널?'의 하위에 표시되는 'NOT NULL'에 NULL의 여부가 표시되지 않는 문제가 있었다.
3.2.2. 해결방안
    '널?'의 하위에 'NOT NULL'을 표시하기 위해
    (1)컬럼 레벨 형식인 '컬럼명 데이터타입 [CONSTRATINT CONSTRAINT명] NOT NULL'로 수정하여 생성하였다.
    
    ((2)테이블 레벨 형식으로 NULL 설정시, VIEW_CONSTCHECK 로 조회시 'SEARCH_CONDITION'에서 테이블명이 따옴표(")없이 입력된다는 점도 있음)    
        (EX. 지정 실습 참조
        --○ CK 지정 실습((1) 컬럼 레벨의 형식)
        HR	SYS_C007133	TBL_TEST11	    C	COL2	"COL2" IS NOT NULL	
        HR	SYS_C007134	TBL_TEST11	    P	COL1		
        
        --○ CK 지정 실습((2) 테이블 레벨의 형식)
        HR	TEST12_COL2_NN	TBL_TEST12	C	COL2	COL2 IS NOT NULL	
        HR	TEST12_COL1_PK	TBL_TEST12	P	COL1		)
        
3.3. 문제3) 시퀀스 설정
3.3.1. 상세내용
    처음에는 테이블조회시 키값으로 번호가 있는 경우가 있었는데, INSERT 구문으로 직접 입력하여
    넣어주었다고 생각하여 아래와 같이 작성하였다. 하지만, 시퀀스를 'SELECT * FROM USER_SEQUENCES;'로 조회해 보니,
    작성해야 하는 테이블에 시퀀스가 부여되어 있었다.

3.3.2. 해결방안
    시퀀스를 설정해주기 위해 기존 데이터를 모두 지우고, 시퀀스 생성 후 INSERT 구문을 다시 작성하였다.
    (EX. 
    - 시퀀스 설정
    CREATE SEQUENCE LOCATIONS3_SEQ   -- 기본적인 시퀀스 생성 구문
    START WITH 1000                -- 시작값 설정
    INCREMENT BY 100              -- 증가값 설정
    MAXVALUE 9990                  -- 최대값 설정 옵션
    NOCACHE;                    -- 캐시 사용 안함 설정 옵션
    - 입력구문_기존방식
    INSERT INTO LOCATIONS3 (LOCATION_ID,STREET_ADDRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID) VALUES (1000,'1297 Via Cola di Rie','00989','Roma',null,'IT');
    - 입력구문_수정방식
    INSERT INTO LOCATIONS3 (LOCATION_ID,STREET_ADDRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID) VALUES (LOCATIONS3_SEQ.NEXTVAL,'1297 Via Cola di Rie','00989','Roma',null,'IT');
    }

-----------------------------------------------------------------------------------------

4. 최종 후기
    수업을 통해 테이블 생성시 고려해야하는 컬럼이름, 자료형, DEFAULT 표현식, NOT NULL 등에 대하여 배웠지만,
    실제로 테이블을 만들고 제약조건 설정에 많은 점을 고려해야한다는 것을 배웠다.(EX. 부모테이블을 먼저 생성하는 등)
    그리고 실무에서는 이보다 더욱 복잡한 테이블이 많을 텐데 오라클의 문법에 더욱 익숙해져야 한다고 생각했고..
    정말 아쉬워던 점은 거의 마지막에 시퀀스를 발견해서 테이블 입력값을 삭제하고 다시 생성했는데,
    만약 테이블의 정보를 수집하는 단계에서 발견했다면 위와 같은 문제를 예방할 수 있었을텐데하는 아쉬움이 들었다.
    가장 중요한 것은 시작단계에서 계획을 잘 세우는 것! 이라는 생각이 든다. 팀원 덕분에 즐겁게 마무리 할 수 있어서 좋았다!
         
